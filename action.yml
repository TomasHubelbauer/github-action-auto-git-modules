name: 'Auto Git Modules'
description: 'A GitHub Action for automatically syncing changes to .gitmodules with the rest of the Git repository'
inputs:
  sync-metadata:
    description: 'Add & sync .gitmodules API keys description, created_at, updated_at, pushed_at, homepage, archived and topics?'
    required: false
    default: 'true'
runs:
  using: 'composite'
  steps:
    - name: Check out repository code
      uses: actions/checkout@main
      with:
        # Note `submodules: recursive` would not do `--remote` and would fail if
        # an existing submodule was removed from `.gitmodules` so we run the
        # removal script first and then the submodule update with `--remove` and
        # the addition script next.
        ref: main

    - name: Run the removal script
      run: node ${{ github.action_path }}/removeSubmodules.js
      shell: bash

    - name: Sync submodules
      run: git -c protocol.file.allow=always submodule update --init --recursive --remote
      shell: bash

    - name: Run the shorthand expansion script
      run: node ${{ github.action_path }}/expandDotGitmodulesFileShorthandComments.js
      shell: bash

    - name: Run the addition script
      run: node ${{ github.action_path }}/addSubmodules.js
      shell: bash
      env:
        SYNC_METADATA: ${{ inputs.sync-metadata }}
        GITHUB_TOKEN: ${{ github.token }}

    - name: Print changes
      run: git status
      shell: bash

    - name: Commit and push the change to the GitHub repository from the agent
      run: |
        # Configure Git for the push from the workflow to the repository
        # (This is needed even with the workflow PAT)
        # These credentials will make the commit associate with the GitHub Actions service account
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
      shell: bash

    - name: Stage the changes resulting from the above steps
      run: git add .
      shell: bash

    - name: Bail if there are no changes staged to commit
      id: bail
      continue-on-error: true
      run: |
        git status
        if git diff-index --quiet HEAD --; then
          echo "bail=true" >> $GITHUB_OUTPUT
        else
          echo "bail=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Commit the staged changes to the workflow repository
      if: ${{steps.bail.outputs.bail == 'false'}}
      run: git commit -m "Commit submodules sync changes from the workflow" -m "$(cat .git/commit-message.txt)"
      shell: bash

    - name: Rebase if the branch has changed meanwhile or fail on conflicts
      if: ${{steps.bail.outputs.bail == 'false'}}
      run: git pull --rebase
      shell: bash

    - name: Push the commit to the workflow repository
      if: ${{steps.bail.outputs.bail == 'false'}}
      run: git push
      shell: bash
